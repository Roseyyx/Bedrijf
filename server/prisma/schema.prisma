// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  password  String   @db.LongText
  role      Roles    @relation(fields: [roleId], references: [id])
  roleId    Int      @default(2)
  token     String?  @db.LongText
  Orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model categories {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products product[]
}

model product {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?          @db.LongText
  image           String?
  specs           Json?
  options         Json?
  price           Float
  category        categories       @relation(fields: [categoryId], references: [id])
  categoryId      Int
  productsOnOrder ProductOnOrder[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model ProductOnOrder {
  product   product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  quantity  Int

  @@id([productId, orderId])
}

model OrderStatus {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentStatus {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              Int              @id @default(autoincrement())
  user            User?            @relation(fields: [userId], references: [id])
  userId          Int?
  products        ProductOnOrder[]
  status          OrderStatus      @relation(fields: [statusId], references: [id])
  statusId        Int              @default(1)
  paymentStatus   PaymentStatus    @relation(fields: [paymentStatusId], references: [id])
  paymentStatusId Int              @default(1)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}
